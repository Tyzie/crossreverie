from vkbottle.bot import Blueprint, Message
from player import Player
from config import mainkeyb, setkeyb, EMPTY_KEYBOARD

cog = Blueprint("Settings")
cog.labeler.vbml_ignore_case = True

@cog.on.message(text=["‚öô", "–Ω–∞—Å—Ç—Ä–æ–π–∫–∏", "‚öô –Ω–∞—Å—Ç—Ä–æ–π–∫–∏"])
async def settings(message: Message):
	user = await cog.api.users.get(message.from_id)
	player = Player.get_profile(user[0].id)
	if player != False:
		await message.answer(f"""–ù–∞—Å—Ç—Ä–æ–π–∫–∏ –±–æ—Ç–∞, [id{player.id}|{player.nickname}] [{player.uid}]
			-=-=-=-=-=-=-=-=-=-=-
			–ö–ª–∞–≤–∏–∞—Ç—É—Ä—É –º–æ–∂–Ω–æ –≤–∫–ª—é—á–∏—Ç—å –∫–æ–º–∞–Ω–¥–æ–π "–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –≤–∫–ª"‚úî
			–ö–ª–∞–≤–∏–∞—Ç—É—Ä—É –º–æ–∂–Ω–æ –≤—ã–∫–ª—é—á–∏—Ç—å –∫–æ–º–∞–Ω–¥–æ–π "–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –≤—ã–∫–ª"‚ùå
			-=-=-=-=-=-=-=-=-=-=-
			–ò–≥—Ä–æ–≤–æ–π –Ω–∏–∫–Ω–µ–π–º –º–æ–∂–Ω–æ –ø–æ–º–µ–Ω—è—Ç—å –∫–æ–º–∞–Ω–¥–æ–π "–Ω–∏–∫ [–Ω–æ–≤—ã–π –Ω–∏–∫]" üí¨""", keyboard=setkeyb)
		Player.set_action(player.uid, "main")
		print(f"{player.nickname} [{player.uid}] called 'settings'")

@cog.on.message(text=["–∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –≤–∫–ª"])
async def keyb_on(message: Message):
	user = await cog.api.users.get(message.from_id)
	player = Player.get_profile(user[0].id)
	if player != False:
		Player.keyb(player.uid, 1)
		await message.answer(f"[id{player.id}|{player.nickname}] [{player.uid}], —Ç—ã –≤–∫–ª—é—á–∏–ª –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –≤ –±–æ—Ç–µ! ‚úî", keyboard=mainkeyb)
		Player.set_action(player.uid, "main")
		print(f"{player.nickname} [{player.uid}] called 'keyb_on'")

@cog.on.message(text=["–∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –≤—ã–∫–ª"])
async def keyb_off(message: Message):
	user = await cog.api.users.get(message.from_id)
	player = Player.get_profile(user[0].id)
	if player != False:
		Player.keyb(player.uid, 0)
		await message.answer(f"[id{player.id}|{player.nickname}] [{player.uid}], —Ç—ã –≤—ã–∫–ª—é—á–∏–ª –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –≤ –±–æ—Ç–µ! ‚ùå", keyboard=EMPTY_KEYBOARD)
		Player.set_action(player.uid, "main")
		print(f"{player.nickname} [{player.uid}] called 'keyb_off'")

@cog.on.message(text=["–Ω–∏–∫ <text>", "–Ω–∏–∫"])
async def set_nick(message: Message, text=None):
	user = await cog.api.users.get(message.from_id)
	player = Player.get_profile(user[0].id)
	if player != False and text == None and player.keyb == 1:
		await message.answer(f"[id{player.id}|{player.nickname}] [{player.uid}], –Ω–∏–∫ –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –ø—É—Å—Ç—ã–º! ‚ùå", keyboard=mainkeyb)
		Player.set_action(player.uid, "main")
		print(f"{player.nickname} [{player.uid}] called 'set_nick' nick: {text}")
	if player != False and text == None and player.keyb == 0:
		await message.answer(f"[id{player.id}|{player.nickname}] [{player.uid}], –Ω–∏–∫ –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –ø—É—Å—Ç—ã–º! ‚ùå", keyboard=EMPTY_KEYBOARD)
		Player.set_action(player.uid, "main")
		print(f"{player.nickname} [{player.uid}] called 'set_nick' nick: {text}")
	if player != False and text != None and player.keyb == 1:
		Player.set_nick(player.uid, text)
		await message.answer(f"[id{player.id}|{player.nickname}] [{player.uid}], —Ç–≤–æ–π –Ω–æ–≤—ã–π –Ω–∏–∫: {text}! ‚úî", keyboard=mainkeyb)
		Player.set_action(player.uid, "main")
		print(f"{player.nickname} [{player.uid}] called 'set_nick' nick: {text}")
	if player != False and text != None and player.keyb == 0:
		Player.set_nick(player.uid, text)
		await message.answer(f"[id{player.id}|{player.nickname}] [{player.uid}], —Ç–≤–æ–π –Ω–æ–≤—ã–π –Ω–∏–∫: {text}! ‚úî", keyboard=EMPTY_KEYBOARD)
		Player.set_action(player.uid, "main")
		print(f"{player.nickname} [{player.uid}] called 'set_nick' nick: {text}")

from vkbottle.bot import Blueprint, Message
from player import Player
from config import mainkeyb, earnkeyb, convkeyb, jobskeyb, choicekeyb, EMPTY_KEYBOARD
import asyncio

cog = Blueprint("Earnings")
cog.labeler.vbml_ignore_case = True

@cog.on.message(text=["–∑–∞—Ä–∞–±–æ—Ç–æ–∫", "üíº –∑–∞—Ä–∞–±–æ—Ç–æ–∫"])
async def earnings(message: Message):
	user = await cog.api.users.get(message.from_id)
	player = Player.get_profile(user[0].id)
	if player != False and player.action == "main" and player.keyb == 1:
		await message.answer(f"""[id{player.id}|{player.nickname}] [{player.uid}], —Ç–µ–±–µ –¥–æ—Å—Ç—É–ø–Ω—ã –¥–∞–Ω–Ω—ã–µ —Å–ø–æ—Å–æ–±—ã –∑–∞—Ä–∞–±–æ—Ç–∫–∞:
			–û–±–º–µ–Ω–Ω–∏–∫ –≤–∞–ª—é—Ç - –∑–¥–µ—Å—å —Ç—ã –º–æ–∂–µ—à—å –æ–±–º–µ–Ω—è—Ç—å –Ω—É–∂–Ω—É—é —Ç–µ–±–µ –≤–∞–ª—é—Ç—É –Ω–∞ –¥—Ä—É–≥—É—é ‚≠ê
			–†–∞–±–æ—Ç—ã - –∑–¥–µ—Å—å –µ—Å—Ç—å –≤–∞–∫–∞–Ω—Å–∏–∏ –¥–ª—è —Ç–æ–≥–æ, —á—Ç–æ –ø–æ–ª—É—á–∏—Ç—å –Ω–µ–º–Ω–æ–≥–æ —Ä–µ—Å—É—Ä—Å–æ–≤!""", keyboard=earnkeyb)
		Player.set_action(player.uid, "earn")
		print(f"{player.nickname} [{player.uid}] called 'earnings'")
	if player != False and player.action == "main" and player.keyb == 0:
		await message.answer(f"""[id{player.id}|{player.nickname}] [{player.uid}], —Ç–µ–±–µ –¥–æ—Å—Ç—É–ø–Ω—ã –¥–∞–Ω–Ω—ã–µ —Å–ø–æ—Å–æ–±—ã –∑–∞—Ä–∞–±–æ—Ç–∫–∞:
			–û–±–º–µ–Ω–Ω–∏–∫ –≤–∞–ª—é—Ç - –∑–¥–µ—Å—å —Ç—ã –º–æ–∂–µ—à—å –æ–±–º–µ–Ω—è—Ç—å –Ω—É–∂–Ω—É—é —Ç–µ–±–µ –≤–∞–ª—é—Ç—É –Ω–∞ –¥—Ä—É–≥—É—é ‚≠ê
			–†–∞–±–æ—Ç—ã - –∑–¥–µ—Å—å –µ—Å—Ç—å –≤–∞–∫–∞–Ω—Å–∏–∏ –¥–ª—è —Ç–æ–≥–æ, —á—Ç–æ –ø–æ–ª—É—á–∏—Ç—å –Ω–µ–º–Ω–æ–≥–æ —Ä–µ—Å—É—Ä—Å–æ–≤!""", keyboard=EMPTY_KEYBOARD)
		Player.set_action(player.uid, "earn")
		print(f"{player.nickname} [{player.uid}] called 'earnings'")

@cog.on.message(text=["–æ–±–º–µ–Ω–Ω–∏–∫ –≤–∞–ª—é—Ç"])
async def converter(message: Message):
	user = await cog.api.users.get(message.from_id)
	player = Player.get_profile(user[0].id)
	if player != False and player.action == "earn" and player.keyb == 1:
		await message.answer(f"""[id{player.id}|{player.nickname}] [{player.uid}], —ç—Ç–æ –æ–±–º–µ–Ω–Ω–∏–∫ –≤–∞–ª—é—Ç:
			–û–±–º–µ–Ω–Ω–∏–∫ –≤–∞–ª—é—Ç - –∑–¥–µ—Å—å —Ç—ã –º–æ–∂–µ—à—å –æ–±–º–µ–Ω—è—Ç—å –Ω—É–∂–Ω—É—é —Ç–µ–±–µ –≤–∞–ª—é—Ç—É –Ω–∞ –¥—Ä—É–≥—É—é
			-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
			1 ‚¨ú = 100 üüß
			1 üü® = 100 ‚¨ú
			-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
			–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:
			üüß –≤ ‚¨ú [–∫–æ–ª–ª–∏—á–µ—Å—Ç–≤–æ]
			‚¨ú –≤ üü® [–∫–æ–ª–ª–∏—á–µ—Å—Ç–≤–æ]
			""", keyboard=convkeyb)
		Player.set_action(player.uid, "conv")
		print(f"{player.nickname} [{player.uid}] called 'converter'")
	if player != False and player.action == "earn" and player.keyb == 0:
		await message.answer(f"""[id{player.id}|{player.nickname}] [{player.uid}], —ç—Ç–æ –æ–±–º–µ–Ω–Ω–∏–∫ –≤–∞–ª—é—Ç:
			–û–±–º–µ–Ω–Ω–∏–∫ –≤–∞–ª—é—Ç - –∑–¥–µ—Å—å —Ç—ã –º–æ–∂–µ—à—å –æ–±–º–µ–Ω—è—Ç—å –Ω—É–∂–Ω—É—é —Ç–µ–±–µ –≤–∞–ª—é—Ç—É –Ω–∞ –¥—Ä—É–≥—É—é
			-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
			1 ‚¨ú = 100 üüß
			1 üü® = 100 ‚¨ú
			-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
			–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:
			üüß –≤ ‚¨ú [–∫–æ–ª–ª–∏—á–µ—Å—Ç–≤–æ]
			‚¨ú –≤ üü® [–∫–æ–ª–ª–∏—á–µ—Å—Ç–≤–æ]
			""", keyboard=EMPTY_KEYBOARD)
		Player.set_action(player.uid, "conv")
		print(f"{player.nickname} [{player.uid}] called 'converter'")

@cog.on.message(text=["üüß –≤ ‚¨ú <numb>", "üüß –≤ ‚¨ú"])
async def bronze_silver(message: Message, numb=100):
	user = await cog.api.users.get(message.from_id)
	player = Player.get_profile(user[0].id)
	if player != False and player.action == "conv" and player.keyb == 1:
		i = Player.bronze_silver(player.uid, numb)
		if i != False:
			await message.answer(f"[id{player.id}|{player.nickname}] [{player.uid}], —Ç—ã –æ–±–º–µ–Ω—è–ª {numb} üüß –≤ —Å–µ—Ä–µ–±—Ä–æ ‚¨ú!", keyboard=mainkeyb)
		if i == False:
			await message.answer(f"[id{player.id}|{player.nickname}] [{player.uid}], —Ç–µ–±–µ –Ω–µ—Ö–≤–∞—Ç–∞–µ—Ç –º–µ–¥–∏ üüß –¥–ª—è –æ–±–º–µ–Ω–∞! ‚ùå", keyboard=mainkeyb)
		Player.set_action(player.uid, "main")
		print(f"{player.nickname} [{player.uid}] called 'bronze_silver' numb: {numb}")
	if player != False and player.action == "conv" and player.keyb == 0:
		i = Player.bronze_silver(player.uid, numb)
		if i != False:
			await message.answer(f"[id{player.id}|{player.nickname}] [{player.uid}], —Ç—ã –æ–±–º–µ–Ω—è–ª {numb} üüß –≤ —Å–µ—Ä–µ–±—Ä–æ ‚¨ú!", keyboard=EMPTY_KEYBOARD)
		if i == False:
			await message.answer(f"[id{player.id}|{player.nickname}] [{player.uid}], —Ç–µ–±–µ –Ω–µ—Ö–≤–∞—Ç–∞–µ—Ç –º–µ–¥–∏ üüß –¥–ª—è –æ–±–º–µ–Ω–∞! ‚ùå", keyboard=EMPTY_KEYBOARD)
		print(f"{player.nickname} [{player.uid}] called 'bronze_silver' numb: {numb}")
		Player.set_action(player.uid, "main")

@cog.on.message(text=["‚¨ú –≤ üü® <numb>", "‚¨ú –≤ üü®"])
async def silver_gold(message: Message, numb=100):
	user = await cog.api.users.get(message.from_id)
	player = Player.get_profile(user[0].id)
	if player != False and player.action == "conv" and player.keyb == 1:
		i = Player.silver_gold(player.uid, numb)
		if i != False:
			await message.answer(f"[id{player.id}|{player.nickname}] [{player.uid}], —Ç—ã –æ–±–º–µ–Ω—è–ª {numb} ‚¨ú –≤ –∑–æ–ª–æ—Ç–æ üü®!", keyboard=mainkeyb)
		if i == False:
			await message.answer(f"[id{player.id}|{player.nickname}] [{player.uid}], —Ç–µ–±–µ –Ω–µ—Ö–≤–∞—Ç–∞–µ—Ç —Å–µ—Ä–µ–±—Ä–∞ ‚¨ú –¥–ª—è –æ–±–º–µ–Ω–∞! ‚ùå", keyboard=mainkeyb)
		Player.set_action(player.uid, "main")
		print(f"{player.nickname} [{player.uid}] called 'silver_gold' numb: {numb}")
	if player != False and player.action == "conv" and player.keyb == 0:
		i = Player.silver_gold(player.uid, numb)
		if i != False:
			await message.answer(f"[id{player.id}|{player.nickname}] [{player.uid}], —Ç—ã –æ–±–º–µ–Ω—è–ª {numb} ‚¨ú –≤ –∑–æ–ª–æ—Ç–æ üü®!", keyboard=EMPTY_KEYBOARD)
		if i == False:
			await message.answer(f"[id{player.id}|{player.nickname}] [{player.uid}], —Ç–µ–±–µ –Ω–µ—Ö–≤–∞—Ç–∞–µ—Ç —Å–µ—Ä–µ–±—Ä–∞ ‚¨ú –¥–ª—è –æ–±–º–µ–Ω–∞! ‚ùå", keyboard=EMPTY_KEYBOARD)
		print(f"{player.nickname} [{player.uid}] called 'silver_gold' numb: {numb}")
		Player.set_action(player.uid, "main")

@cog.on.message(text=["—Ä–∞–±–æ—Ç—ã"])
async def jobs(message: Message):
	user = await cog.api.users.get(message.from_id)
	player = Player.get_profile(user[0].id)
	if player != False and player.action == "earn" and player.keyb == 1:
		await message.answer(f"""[id{player.id}|{player.nickname}] [{player.uid}], –∑–¥–µ—Å—å —Ç—ã –º–æ–∂–µ—à—å –ø–æ–¥–æ–±—Ä–∞—Ç—å —Å–µ–±–µ —Ä–∞–±–æ—Ç—É:
			=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
			–£–±–æ—Ä—â–∏–∫ | –í—Ä–µ–º—è: 5 —Å–µ–∫—É–Ω–¥ ‚åö | –ú–µ–¥—å: 1-3 üüß | –û–ø—ã—Ç: 0-1 ‚≠ê
			–ü—Ä–æ–¥–∞–≤–µ—Ü | –í—Ä–µ–º—è: 10 —Å–µ–∫—É–Ω–¥ ‚åö | –ú–µ–¥—å: 1-5 üüß | –û–ø—ã—Ç 0-2 ‚≠ê | –¢—Ä–µ–±—É–µ—Ç—Å—è 3 —É—Ä–æ–≤–µ–Ω—å ‚≠ê""", keyboard=jobskeyb)
		Player.set_action(player.uid, "jobs")
		print(f"{player.nickname} [{player.uid}] called 'jobs'")
	if player != False and player.action == "earn" and player.keyb == 0:
		await message.answer(f"""[id{player.id}|{player.nickname}] [{player.uid}], –∑–¥–µ—Å—å —Ç—ã –º–æ–∂–µ—à—å –ø–æ–¥–æ–±—Ä–∞—Ç—å —Å–µ–±–µ —Ä–∞–±–æ—Ç—É:
			=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
			–£–±–æ—Ä—â–∏–∫ | –í—Ä–µ–º—è: 5 —Å–µ–∫—É–Ω–¥ ‚åö | –ú–µ–¥—å: 1-3 üüß | –û–ø—ã—Ç: 0-1 ‚≠ê
			–ü—Ä–æ–¥–∞–≤–µ—Ü | –í—Ä–µ–º—è: 10 —Å–µ–∫—É–Ω–¥ ‚åö | –ú–µ–¥—å: 1-5 üüß | –û–ø—ã—Ç 0-2 ‚≠ê | –¢—Ä–µ–±—É–µ—Ç—Å—è 3 —É—Ä–æ–≤–µ–Ω—å ‚≠ê""", keyboard=EMPTY_KEYBOARD)
		Player.set_action(player.uid, "jobs")
		print(f"{player.nickname} [{player.uid}] called 'jobs'")

@cog.on.message(text=["—É–±–æ—Ä—â–∏–∫"])
async def cleaner(message: Message):
	user = await cog.api.users.get(message.from_id)
	player = Player.get_profile(user[0].id)
	if player != False and player.action == "jobs" and player.keyb == 1:
		await message.answer(f"[id{player.id}|{player.nickname}] [{player.uid}], –≤–∑—è–ª –≤ —Ä—É–∫–∏ –º–µ—Ç–ª—É üßπ")
		await asyncio.sleep(1)
		await message.answer(f"[id{player.id}|{player.nickname}] [{player.uid}], –Ω–∞—á–∞–ª –ø–æ–¥–º–µ—Ç–∞—Ç—å –∫–æ–º–Ω–∞—Ç—É üßπ")
		await asyncio.sleep(4)
		i = Player.job(player.uid, 1)
		Player.set_action(player.uid, "cleaner")
		player = Player.get_profile(user[0].id)
		await message.answer(f"""[id{player.id}|{player.nickname}] [{player.uid}], –ø–æ–ª—É—á–∏–ª: 
			| –û–ø—ã—Ç: +{i[0]} ‚≠ê
			| –ú–µ–¥—å: +{i[1]} üüß
			| –û–±—â–∏–π –±–∞–ª–∞–Ω—Å: {player.copper} üüß 
			–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å?""", keyboard=choicekeyb)
	if player != False and player.action == "jobs" and player.keyb == 0:
		await message.answer(f"[id{player.id}|{player.nickname}] [{player.uid}], –≤–∑—è–ª –≤ —Ä—É–∫–∏ –º–µ—Ç–ª—É üßπ")
		await asyncio.sleep(1)
		await message.answer(f"[id{player.id}|{player.nickname}] [{player.uid}], –Ω–∞—á–∞–ª –ø–æ–¥–º–µ—Ç–∞—Ç—å –∫–æ–º–Ω–∞—Ç—É üßπüçÉ")
		await asyncio.sleep(4)
		i = Player.job(player.uid, 1)
		Player.set_action(player.uid, "cleaner")
		player = Player.get_profile(user[0].id)
		await message.answer(f"""[id{player.id}|{player.nickname}] [{player.uid}], –ø–æ–ª—É—á–∏–ª: 
			| –û–ø—ã—Ç: +{i[0]} ‚≠ê
			| –ú–µ–¥—å: +{i[1]} üüß
			| –û–±—â–∏–π –±–∞–ª–∞–Ω—Å: {player.copper} üüß 
			–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å?""", keyboard=EMPTY_KEYBOARD)

@cog.on.message(text=["–ø—Ä–æ–¥–∞–≤–µ—Ü"])
async def salesman(message: Message):
	user = await cog.api.users.get(message.from_id)
	player = Player.get_profile(user[0].id)
	if player != False and player.action == "jobs" and player.keyb == 1 and player.level >= 3:
		await message.answer(f"[id{player.id}|{player.nickname}] [{player.uid}], –≤—Å—Ç–∞–ª –Ω–∞ —Ä–∞–±–æ—á–µ–µ –º–µ—Å—Ç–æ üè™")
		await asyncio.sleep(5)
		await message.answer(f"[id{player.id}|{player.nickname}] [{player.uid}], –ø—Ä–æ–±–∏–ª –ø—Ä–æ–¥—É–∫—Ç—ã üçâ")
		await asyncio.sleep(2)
		await message.answer(f"[id{player.id}|{player.nickname}] [{player.uid}], –ø—Ä–∏–Ω—è–ª –æ–ø–ª–∞—Ç—É üí∞")
		await asyncio.sleep(3)
		await message.answer(f"[id{player.id}|{player.nickname}] [{player.uid}], –æ—Ç–¥–∞–ª —Å–¥–∞—á—É üíµ")
		i = Player.job(player.uid, 2)
		Player.set_action(player.uid, "salesman")
		player = Player.get_profile(user[0].id)
		await message.answer(f"""[id{player.id}|{player.nickname}] [{player.uid}] –ø–æ–ª—É—á–∏–ª: 
			| –û–ø—ã—Ç: +{i[0]} ‚≠ê
			| –ú–µ–¥—å: +{i[1]} üüß
			| –û–±—â–∏–π –±–∞–ª–∞–Ω—Å: {player.copper} üüß 
			–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å?""", keyboard=choicekeyb)
	if player != False and player.action == "jobs" and player.keyb == 0 and player.level >= 3:
		await message.answer(f"[id{player.id}|{player.nickname}] [{player.uid}], –≤—Å—Ç–∞–ª –Ω–∞ —Ä–∞–±–æ—á–µ–µ –º–µ—Å—Ç–æ üè™")
		await asyncio.sleep(5)
		await message.answer(f"[id{player.id}|{player.nickname}] [{player.uid}], –ø—Ä–æ–±–∏–ª –ø—Ä–æ–¥—É–∫—Ç—ã üçâ")
		await asyncio.sleep(2)
		await message.answer(f"[id{player.id}|{player.nickname}] [{player.uid}], –ø—Ä–∏–Ω—è–ª –æ–ø–ª–∞—Ç—É üí∞")
		await asyncio.sleep(3)
		await message.answer(f"[id{player.id}|{player.nickname}] [{player.uid}], –æ—Ç–¥–∞–ª —Å–¥–∞—á—É üíµ")
		i = Player.job(player.uid, 2)
		Player.set_action(player.uid, "salesman")
		player = Player.get_profile(user[0].id)
		await message.answer(f"""[id{player.id}|{player.nickname}] [{player.uid}] –ø–æ–ª—É—á–∏–ª: 
			| –û–ø—ã—Ç: +{i[0]} ‚≠ê
			| –ú–µ–¥—å: +{i[1]} üüß
			| –û–±—â–∏–π –±–∞–ª–∞–Ω—Å: {player.copper} üüß 
			–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å?""", keyboard=EMPTY_KEYBOARD)
	if player != False and player.action == "jobs" and player.keyb == 1 and player.level < 3:
		await message.answer(f"[id{player.id}|{player.nickname}] [{player.uid}], —Ç–≤–æ–π —É—Ä–æ–≤–µ–Ω—å {player.level}, –∞ —Ç—Ä–µ–±—É–µ—Ç—Å—è 3 —É—Ä–æ–≤–µ–Ω—å! ‚ùå", keyboard=mainkeyb)
		Player.set_action(player.uid, "main")
	if player != False and player.action == "jobs" and player.keyb == 0 and player.level < 3:
		await message.answer(f"[id{player.id}|{player.nickname}] [{player.uid}], —Ç–≤–æ–π —É—Ä–æ–≤–µ–Ω—å {player.level}, –∞ —Ç—Ä–µ–±—É–µ—Ç—Å—è 3 —É—Ä–æ–≤–µ–Ω—å! ‚ùå", keyboard=EMPTY_KEYBOARD)
		Player.set_action(player.uid, "main")

@cog.on.message(text=["–¥–∞"])
async def choice_yes(message: Message):
	user = await cog.api.users.get(message.from_id)
	player = Player.get_profile(user[0].id)
	if player != False and player.action == "cleaner" and player.keyb == 1:
		await message.answer(f"[id{player.id}|{player.nickname}] [{player.uid}] –≤–∑—è–ª –≤ —Ä—É–∫–∏ –º–µ—Ç–ª—É üßπ")
		await asyncio.sleep(1)
		await message.answer(f"[id{player.id}|{player.nickname}] [{player.uid}] –Ω–∞—á–∞–ª –ø–æ–¥–º–µ—Ç–∞—Ç—å –∫–æ–º–Ω–∞—Ç—É üßπ")
		await asyncio.sleep(4)
		i = Player.job(player.uid, 1)
		Player.set_action(player.uid, "cleaner")
		player = Player.get_profile(user[0].id)
		await message.answer(f"""[id{player.id}|{player.nickname}] [{player.uid}] –ø–æ–ª—É—á–∏–ª: 
			| –û–ø—ã—Ç: +{i[0]} ‚≠ê
			| –ú–µ–¥—å: +{i[1]} üüß 
			| –û–±—â–∏–π –±–∞–ª–∞–Ω—Å: {player.copper} üüß
			–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å?""", keyboard=choicekeyb)
	if player != False and player.action == "cleaner" and player.keyb == 0:
		await message.answer(f"[id{player.id}|{player.nickname}] [{player.uid}] –≤–∑—è–ª –≤ —Ä—É–∫–∏ –º–µ—Ç–ª—É üßπ")
		await asyncio.sleep(1)
		await message.answer(f"[id{player.id}|{player.nickname}] [{player.uid}] –Ω–∞—á–∞–ª –ø–æ–¥–º–µ—Ç–∞—Ç—å –∫–æ–º–Ω–∞—Ç—É üßπ")
		await asyncio.sleep(4)
		i = Player.job(player.uid, 1)
		Player.set_action(player.uid, "cleaner")
		player = Player.get_profile(user[0].id)
		await message.answer(f"""[id{player.id}|{player.nickname}] [{player.uid}] –ø–æ–ª—É—á–∏–ª: 
			| –û–ø—ã—Ç: +{i[0]} ‚≠ê
			| –ú–µ–¥—å: +{i[1]} üüß 
			| –û–±—â–∏–π –±–∞–ª–∞–Ω—Å: {player.copper} üüß
			–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å?""", keyboard=EMPTY_KEYBOARD)
	if player != False and player.action == "salesman" and player.keyb == 1:
		await message.answer(f"[id{player.id}|{player.nickname}] [{player.uid}], –≤—Å—Ç–∞–ª –Ω–∞ —Ä–∞–±–æ—á–µ–µ –º–µ—Å—Ç–æ üè™")
		await asyncio.sleep(5)
		await message.answer(f"[id{player.id}|{player.nickname}] [{player.uid}], –ø—Ä–æ–±–∏–ª –ø—Ä–æ–¥—É–∫—Ç—ã üçâ")
		await asyncio.sleep(2)
		await message.answer(f"[id{player.id}|{player.nickname}] [{player.uid}], –ø—Ä–∏–Ω—è–ª –æ–ø–ª–∞—Ç—É üí∞")
		await asyncio.sleep(3)
		await message.answer(f"[id{player.id}|{player.nickname}] [{player.uid}], –æ—Ç–¥–∞–ª —Å–¥–∞—á—É üíµ")
		i = Player.job(player.uid, 2)
		Player.set_action(player.uid, "salesman")
		player = Player.get_profile(user[0].id)
		await message.answer(f"""[id{player.id}|{player.nickname}] [{player.uid}] –ø–æ–ª—É—á–∏–ª: 
			| –û–ø—ã—Ç: +{i[0]} ‚≠ê
			| –ú–µ–¥—å: +{i[1]} üüß 
			| –û–±—â–∏–π –±–∞–ª–∞–Ω—Å: {player.copper} üüß
			–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å?""", keyboard=choicekeyb)
	if player != False and player.action == "salesman" and player.keyb == 0:
		await message.answer(f"[id{player.id}|{player.nickname}] [{player.uid}], –≤—Å—Ç–∞–ª –Ω–∞ —Ä–∞–±–æ—á–µ–µ –º–µ—Å—Ç–æ üè™")
		await asyncio.sleep(5)
		await message.answer(f"[id{player.id}|{player.nickname}] [{player.uid}], –ø—Ä–æ–±–∏–ª –ø—Ä–æ–¥—É–∫—Ç—ã üçâ")
		await asyncio.sleep(2)
		await message.answer(f"[id{player.id}|{player.nickname}] [{player.uid}], –ø—Ä–∏–Ω—è–ª –æ–ø–ª–∞—Ç—É üí∞")
		await asyncio.sleep(3)
		await message.answer(f"[id{player.id}|{player.nickname}] [{player.uid}], –æ—Ç–¥–∞–ª —Å–¥–∞—á—É üíµ")
		i = Player.job(player.uid, 2)
		Player.set_action(player.uid, "salesman")
		player = Player.get_profile(user[0].id)
		await message.answer(f"""[id{player.id}|{player.nickname}] [{player.uid}] –ø–æ–ª—É—á–∏–ª: 
			| –û–ø—ã—Ç: +{i[0]} ‚≠ê
			| –ú–µ–¥—å: +{i[1]} üüß 
			| –û–±—â–∏–π –±–∞–ª–∞–Ω—Å: {player.copper} üüß
			–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å?""", keyboard=EMPTY_KEYBOARD)

@cog.on.message(text=["–Ω–µ—Ç"])
async def choice_no(message: Message):
	user = await cog.api.users.get(message.from_id)
	player = Player.get_profile(user[0].id)
	if player != False and player.action == "cleaner" and player.keyb == 1:
		Player.set_action(player.uid, "main")
		await message.answer(f"[id{player.id}|{player.nickname}] [{player.uid}], –ø—Ä–∏—Ö–æ–¥–∏ –µ—â–µ, —Ä–∞–±–æ—Ç–∞ –≤—Å–µ–≥–¥–∞ –Ω–∞–π–¥–µ—Ç—Å—è!", keyboard=mainkeyb)
	if player != False and player.action == "cleaner" and player.keyb == 0:
		Player.set_action(player.uid, "main")
		await message.answer(f"[id{player.id}|{player.nickname}] [{player.uid}], –ø—Ä–∏—Ö–æ–¥–∏ –µ—â–µ, —Ä–∞–±–æ—Ç–∞ –≤—Å–µ–≥–¥–∞ –Ω–∞–π–¥–µ—Ç—Å—è!", keyboard=EMPTY_KEYBOARD)
	if player != False and player.action == "salesman" and player.keyb == 1:
		Player.set_action(player.uid, "main")
		await message.answer(f"[id{player.id}|{player.nickname}] [{player.uid}], –ø—Ä–∏—Ö–æ–¥–∏ –µ—â–µ, —Ä–∞–±–æ—Ç–∞ –≤—Å–µ–≥–¥–∞ –Ω–∞–π–¥–µ—Ç—Å—è!", keyboard=mainkeyb)
	if player != False and player.action == "salesman" and player.keyb == 0:
		Player.set_action(player.uid, "main")
		await message.answer(f"[id{player.id}|{player.nickname}] [{player.uid}], –ø—Ä–∏—Ö–æ–¥–∏ –µ—â–µ, —Ä–∞–±–æ—Ç–∞ –≤—Å–µ–≥–¥–∞ –Ω–∞–π–¥–µ—Ç—Å—è!", keyboard=EMPTY_KEYBOARD)